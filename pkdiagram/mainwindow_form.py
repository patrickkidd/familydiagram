# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'pkdiagram/mainwindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(776, 531)
        MainWindow.setMinimumSize(QtCore.QSize(400, 250))
        self.centralWidget = QtWidgets.QWidget(MainWindow)
        self.centralWidget.setObjectName("centralWidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.centralWidget)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setSpacing(6)
        self.horizontalLayout.setObjectName("horizontalLayout")
        MainWindow.setCentralWidget(self.centralWidget)
        self.menuBar = QtWidgets.QMenuBar(MainWindow)
        self.menuBar.setGeometry(QtCore.QRect(0, 0, 776, 21))
        self.menuBar.setObjectName("menuBar")
        self.menuFile = QtWidgets.QMenu(self.menuBar)
        self.menuFile.setObjectName("menuFile")
        self.menuOpen_Recent = QtWidgets.QMenu(self.menuFile)
        self.menuOpen_Recent.setObjectName("menuOpen_Recent")
        self.menuInsert = QtWidgets.QMenu(self.menuBar)
        self.menuInsert.setObjectName("menuInsert")
        self.menuEdit = QtWidgets.QMenu(self.menuBar)
        self.menuEdit.setObjectName("menuEdit")
        self.menuTransform = QtWidgets.QMenu(self.menuEdit)
        self.menuTransform.setObjectName("menuTransform")
        self.menuView = QtWidgets.QMenu(self.menuBar)
        self.menuView.setObjectName("menuView")
        self.menuTags = QtWidgets.QMenu(self.menuView)
        self.menuTags.setObjectName("menuTags")
        self.menuLayers = QtWidgets.QMenu(self.menuView)
        self.menuLayers.setObjectName("menuLayers")
        self.menuHelp = QtWidgets.QMenu(self.menuBar)
        self.menuHelp.setObjectName("menuHelp")
        self.menuDebug = QtWidgets.QMenu(self.menuBar)
        self.menuDebug.setObjectName("menuDebug")
        MainWindow.setMenuBar(self.menuBar)
        self.mainToolBar = QtWidgets.QToolBar(MainWindow)
        self.mainToolBar.setObjectName("mainToolBar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.mainToolBar)
        self.statusBar = QtWidgets.QStatusBar(MainWindow)
        self.statusBar.setObjectName("statusBar")
        MainWindow.setStatusBar(self.statusBar)
        self.actionOpen = QtWidgets.QAction(MainWindow)
        self.actionOpen.setObjectName("actionOpen")
        self.actionSave = QtWidgets.QAction(MainWindow)
        self.actionSave.setObjectName("actionSave")
        self.actionSave_As = QtWidgets.QAction(MainWindow)
        self.actionSave_As.setObjectName("actionSave_As")
        self.actionQuit = QtWidgets.QAction(MainWindow)
        self.actionQuit.setObjectName("actionQuit")
        self.actionMale = QtWidgets.QAction(MainWindow)
        self.actionMale.setCheckable(True)
        self.actionMale.setObjectName("actionMale")
        self.actionFemale = QtWidgets.QAction(MainWindow)
        self.actionFemale.setCheckable(True)
        self.actionFemale.setObjectName("actionFemale")
        self.actionMarriage = QtWidgets.QAction(MainWindow)
        self.actionMarriage.setCheckable(True)
        self.actionMarriage.setObjectName("actionMarriage")
        self.actionDelete = QtWidgets.QAction(MainWindow)
        self.actionDelete.setObjectName("actionDelete")
        self.actionZoom_Out = QtWidgets.QAction(MainWindow)
        self.actionZoom_Out.setObjectName("actionZoom_Out")
        self.actionZoom_In = QtWidgets.QAction(MainWindow)
        self.actionZoom_In.setObjectName("actionZoom_In")
        self.actionZoom_Fit = QtWidgets.QAction(MainWindow)
        self.actionZoom_Fit.setObjectName("actionZoom_Fit")
        self.actionNudge_Left = QtWidgets.QAction(MainWindow)
        self.actionNudge_Left.setObjectName("actionNudge_Left")
        self.actionNudge_Right = QtWidgets.QAction(MainWindow)
        self.actionNudge_Right.setObjectName("actionNudge_Right")
        self.actionNudge_Up = QtWidgets.QAction(MainWindow)
        self.actionNudge_Up.setObjectName("actionNudge_Up")
        self.actionNudge_Down = QtWidgets.QAction(MainWindow)
        self.actionNudge_Down.setObjectName("actionNudge_Down")
        self.actionHard_Nudge_Left = QtWidgets.QAction(MainWindow)
        self.actionHard_Nudge_Left.setObjectName("actionHard_Nudge_Left")
        self.actionHard_Nudge_Right = QtWidgets.QAction(MainWindow)
        self.actionHard_Nudge_Right.setObjectName("actionHard_Nudge_Right")
        self.actionHard_Nudge_Up = QtWidgets.QAction(MainWindow)
        self.actionHard_Nudge_Up.setObjectName("actionHard_Nudge_Up")
        self.actionHard_Nudge_Down = QtWidgets.QAction(MainWindow)
        self.actionHard_Nudge_Down.setObjectName("actionHard_Nudge_Down")
        self.actionNew = QtWidgets.QAction(MainWindow)
        self.actionNew.setObjectName("actionNew")
        self.actionAbout = QtWidgets.QAction(MainWindow)
        self.actionAbout.setObjectName("actionAbout")
        self.actionPrint = QtWidgets.QAction(MainWindow)
        self.actionPrint.setObjectName("actionPrint")
        self.actionView_Diagram = QtWidgets.QAction(MainWindow)
        self.actionView_Diagram.setCheckable(True)
        self.actionView_Diagram.setVisible(False)
        self.actionView_Diagram.setObjectName("actionView_Diagram")
        self.actionEditor_Mode = QtWidgets.QAction(MainWindow)
        self.actionEditor_Mode.setCheckable(True)
        self.actionEditor_Mode.setObjectName("actionEditor_Mode")
        self.actionDocuments_Folder = QtWidgets.QAction(MainWindow)
        self.actionDocuments_Folder.setObjectName("actionDocuments_Folder")
        self.actionInspect = QtWidgets.QAction(MainWindow)
        self.actionInspect.setObjectName("actionInspect")
        self.actionSelect_All = QtWidgets.QAction(MainWindow)
        self.actionSelect_All.setObjectName("actionSelect_All")
        self.actionDeselect = QtWidgets.QAction(MainWindow)
        self.actionDeselect.setObjectName("actionDeselect")
        self.actionShow_Timeline = QtWidgets.QAction(MainWindow)
        self.actionShow_Timeline.setCheckable(True)
        self.actionShow_Timeline.setObjectName("actionShow_Timeline")
        self.actionCopy = QtWidgets.QAction(MainWindow)
        self.actionCopy.setAutoRepeat(False)
        self.actionCopy.setObjectName("actionCopy")
        self.actionPaste = QtWidgets.QAction(MainWindow)
        self.actionPaste.setObjectName("actionPaste")
        self.actionCut = QtWidgets.QAction(MainWindow)
        self.actionCut.setObjectName("actionCut")
        self.actionClear_All_Events = QtWidgets.QAction(MainWindow)
        self.actionClear_All_Events.setObjectName("actionClear_All_Events")
        self.actionUndo_History = QtWidgets.QAction(MainWindow)
        self.actionUndo_History.setObjectName("actionUndo_History")
        self.actionHide_Emotional_Process = QtWidgets.QAction(MainWindow)
        self.actionHide_Emotional_Process.setCheckable(True)
        self.actionHide_Emotional_Process.setObjectName("actionHide_Emotional_Process")
        self.actionPreferences = QtWidgets.QAction(MainWindow)
        self.actionPreferences.setObjectName("actionPreferences")
        self.actionHide_ToolBars = QtWidgets.QAction(MainWindow)
        self.actionHide_ToolBars.setCheckable(True)
        self.actionHide_ToolBars.setObjectName("actionHide_ToolBars")
        self.actionImport_Diagram = QtWidgets.QAction(MainWindow)
        self.actionImport_Diagram.setObjectName("actionImport_Diagram")
        self.actionSave_Selection_As = QtWidgets.QAction(MainWindow)
        self.actionSave_Selection_As.setObjectName("actionSave_Selection_As")
        self.actionClose = QtWidgets.QAction(MainWindow)
        self.actionClose.setObjectName("actionClose")
        self.actionCrash = QtWidgets.QAction(MainWindow)
        self.actionCrash.setObjectName("actionCrash")
        self.actionSupport = QtWidgets.QAction(MainWindow)
        self.actionSupport.setObjectName("actionSupport")
        self.actionRaise_Python_Exception = QtWidgets.QAction(MainWindow)
        self.actionRaise_Python_Exception.setObjectName("actionRaise_Python_Exception")
        self.actionCheck_for_Updates = QtWidgets.QAction(MainWindow)
        self.actionCheck_for_Updates.setObjectName("actionCheck_for_Updates")
        self.actionHide_Names = QtWidgets.QAction(MainWindow)
        self.actionHide_Names.setCheckable(True)
        self.actionHide_Names.setObjectName("actionHide_Names")
        self.actionShow_Scene_Center = QtWidgets.QAction(MainWindow)
        self.actionShow_Scene_Center.setCheckable(True)
        self.actionShow_Scene_Center.setObjectName("actionShow_Scene_Center")
        self.actionShow_Print_Rect = QtWidgets.QAction(MainWindow)
        self.actionShow_Print_Rect.setCheckable(True)
        self.actionShow_Print_Rect.setObjectName("actionShow_Print_Rect")
        self.actionChild_Of = QtWidgets.QAction(MainWindow)
        self.actionChild_Of.setCheckable(True)
        self.actionChild_Of.setObjectName("actionChild_Of")
        self.actionConflict = QtWidgets.QAction(MainWindow)
        self.actionConflict.setCheckable(True)
        self.actionConflict.setObjectName("actionConflict")
        self.actionProjection = QtWidgets.QAction(MainWindow)
        self.actionProjection.setCheckable(True)
        self.actionProjection.setObjectName("actionProjection")
        self.actionFusion = QtWidgets.QAction(MainWindow)
        self.actionFusion.setCheckable(True)
        self.actionFusion.setObjectName("actionFusion")
        self.actionPrimary_Cutoff = QtWidgets.QAction(MainWindow)
        self.actionPrimary_Cutoff.setCheckable(True)
        self.actionPrimary_Cutoff.setObjectName("actionPrimary_Cutoff")
        self.actionDistance = QtWidgets.QAction(MainWindow)
        self.actionDistance.setCheckable(True)
        self.actionDistance.setObjectName("actionDistance")
        self.actionStart_Macro = QtWidgets.QAction(MainWindow)
        self.actionStart_Macro.setObjectName("actionStart_Macro")
        self.actionStop_Macro = QtWidgets.QAction(MainWindow)
        self.actionStop_Macro.setObjectName("actionStop_Macro")
        self.actionPlay_Macro = QtWidgets.QAction(MainWindow)
        self.actionPlay_Macro.setObjectName("actionPlay_Macro")
        self.actionShow_Diagram = QtWidgets.QAction(MainWindow)
        self.actionShow_Diagram.setObjectName("actionShow_Diagram")
        self.actionJump_to_Now = QtWidgets.QAction(MainWindow)
        self.actionJump_to_Now.setObjectName("actionJump_to_Now")
        self.actionNext_Event = QtWidgets.QAction(MainWindow)
        self.actionNext_Event.setObjectName("actionNext_Event")
        self.actionPrevious_Event = QtWidgets.QAction(MainWindow)
        self.actionPrevious_Event.setObjectName("actionPrevious_Event")
        self.actionAdd_Event = QtWidgets.QAction(MainWindow)
        self.actionAdd_Event.setObjectName("actionAdd_Event")
        self.actionAdd_Relationship = QtWidgets.QAction(MainWindow)
        self.actionAdd_Relationship.setObjectName("actionAdd_Relationship")
        self.actionShow_Relationships = QtWidgets.QAction(MainWindow)
        self.actionShow_Relationships.setObjectName("actionShow_Relationships")
        self.actionShow_Cursor_Position = QtWidgets.QAction(MainWindow)
        self.actionShow_Cursor_Position.setCheckable(True)
        self.actionShow_Cursor_Position.setObjectName("actionShow_Cursor_Position")
        self.actionShow_Current_Date = QtWidgets.QAction(MainWindow)
        self.actionShow_Current_Date.setCheckable(True)
        self.actionShow_Current_Date.setShortcut("")
        self.actionShow_Current_Date.setObjectName("actionShow_Current_Date")
        self.actionStart_Profile = QtWidgets.QAction(MainWindow)
        self.actionStart_Profile.setObjectName("actionStart_Profile")
        self.actionStop_Profile = QtWidgets.QAction(MainWindow)
        self.actionStop_Profile.setEnabled(False)
        self.actionStop_Profile.setObjectName("actionStop_Profile")
        self.actionReload_Server = QtWidgets.QAction(MainWindow)
        self.actionReload_Server.setObjectName("actionReload_Server")
        self.actionUse_Dev_Server = QtWidgets.QAction(MainWindow)
        self.actionUse_Dev_Server.setCheckable(True)
        self.actionUse_Dev_Server.setObjectName("actionUse_Dev_Server")
        self.actionPush_Queued_Uploads = QtWidgets.QAction(MainWindow)
        self.actionPush_Queued_Uploads.setObjectName("actionPush_Queued_Uploads")
        self.actionClear_Queued_Uploads = QtWidgets.QAction(MainWindow)
        self.actionClear_Queued_Uploads.setObjectName("actionClear_Queued_Uploads")
        self.actionRefresh_Server = QtWidgets.QAction(MainWindow)
        self.actionRefresh_Server.setObjectName("actionRefresh_Server")
        self.actionAdmin_Mode = QtWidgets.QAction(MainWindow)
        self.actionAdmin_Mode.setCheckable(True)
        self.actionAdmin_Mode.setObjectName("actionAdmin_Mode")
        self.actionPathItem_Shapes = QtWidgets.QAction(MainWindow)
        self.actionPathItem_Shapes.setCheckable(True)
        self.actionPathItem_Shapes.setObjectName("actionPathItem_Shapes")
        self.actionShow_Search = QtWidgets.QAction(MainWindow)
        self.actionShow_Search.setCheckable(True)
        self.actionShow_Search.setObjectName("actionShow_Search")
        self.actionCallout = QtWidgets.QAction(MainWindow)
        self.actionCallout.setCheckable(True)
        self.actionCallout.setObjectName("actionCallout")
        self.actionNext_Layer = QtWidgets.QAction(MainWindow)
        self.actionNext_Layer.setObjectName("actionNext_Layer")
        self.actionPrevious_Layer = QtWidgets.QAction(MainWindow)
        self.actionPrevious_Layer.setObjectName("actionPrevious_Layer")
        self.actionHide_Layers = QtWidgets.QAction(MainWindow)
        self.actionHide_Layers.setCheckable(True)
        self.actionHide_Layers.setObjectName("actionHide_Layers")
        self.actionPencilStroke = QtWidgets.QAction(MainWindow)
        self.actionPencilStroke.setCheckable(True)
        self.actionPencilStroke.setObjectName("actionPencilStroke")
        self.actionDefined_Self = QtWidgets.QAction(MainWindow)
        self.actionDefined_Self.setCheckable(True)
        self.actionDefined_Self.setObjectName("actionDefined_Self")
        self.actionAway = QtWidgets.QAction(MainWindow)
        self.actionAway.setCheckable(True)
        self.actionAway.setObjectName("actionAway")
        self.actionToward = QtWidgets.QAction(MainWindow)
        self.actionToward.setCheckable(True)
        self.actionToward.setObjectName("actionToward")
        self.actionShow_Legend = QtWidgets.QAction(MainWindow)
        self.actionShow_Legend.setCheckable(True)
        self.actionShow_Legend.setObjectName("actionShow_Legend")
        self.actionParents_to_Selection = QtWidgets.QAction(MainWindow)
        self.actionParents_to_Selection.setObjectName("actionParents_to_Selection")
        self.actionFree_License = QtWidgets.QAction(MainWindow)
        self.actionFree_License.setCheckable(True)
        self.actionFree_License.setObjectName("actionFree_License")
        self.actionCommercial_Annual_License = QtWidgets.QAction(MainWindow)
        self.actionCommercial_Annual_License.setCheckable(True)
        self.actionCommercial_Annual_License.setObjectName("actionCommercial_Annual_License")
        self.actionProfessional_License = QtWidgets.QAction(MainWindow)
        self.actionProfessional_License.setCheckable(True)
        self.actionProfessional_License.setObjectName("actionProfessional_License")
        self.actionShow_Account = QtWidgets.QAction(MainWindow)
        self.actionShow_Account.setMenuRole(QtWidgets.QAction.ApplicationSpecificRole)
        self.actionShow_Account.setObjectName("actionShow_Account")
        self.actionShow_Welcome = QtWidgets.QAction(MainWindow)
        self.actionShow_Welcome.setMenuRole(QtWidgets.QAction.ApplicationSpecificRole)
        self.actionShow_Welcome.setObjectName("actionShow_Welcome")
        self.actionNo_License = QtWidgets.QAction(MainWindow)
        self.actionNo_License.setCheckable(True)
        self.actionNo_License.setObjectName("actionNo_License")
        self.actionClear_Recent_Menu = QtWidgets.QAction(MainWindow)
        self.actionClear_Recent_Menu.setObjectName("actionClear_Recent_Menu")
        self.actionClear_Preferences = QtWidgets.QAction(MainWindow)
        self.actionClear_Preferences.setObjectName("actionClear_Preferences")
        self.actionBeta_License = QtWidgets.QAction(MainWindow)
        self.actionBeta_License.setCheckable(True)
        self.actionBeta_License.setObjectName("actionBeta_License")
        self.actionUser_Manual = QtWidgets.QAction(MainWindow)
        self.actionUser_Manual.setObjectName("actionUser_Manual")
        self.actionShow_Person_Properties = QtWidgets.QAction(MainWindow)
        self.actionShow_Person_Properties.setObjectName("actionShow_Person_Properties")
        self.actionDeselect_All_Tags = QtWidgets.QAction(MainWindow)
        self.actionDeselect_All_Tags.setObjectName("actionDeselect_All_Tags")
        self.actionDeselect_All_Layers = QtWidgets.QAction(MainWindow)
        self.actionDeselect_All_Layers.setObjectName("actionDeselect_All_Layers")
        self.actionDeactivate_All_Layers = QtWidgets.QAction(MainWindow)
        self.actionDeactivate_All_Layers.setObjectName("actionDeactivate_All_Layers")
        self.actionReciprocity = QtWidgets.QAction(MainWindow)
        self.actionReciprocity.setCheckable(True)
        self.actionReciprocity.setObjectName("actionReciprocity")
        self.actionReset_All = QtWidgets.QAction(MainWindow)
        self.actionReset_All.setObjectName("actionReset_All")
        self.actionShow_Graphical_Timeline = QtWidgets.QAction(MainWindow)
        self.actionShow_Graphical_Timeline.setCheckable(True)
        self.actionShow_Graphical_Timeline.setObjectName("actionShow_Graphical_Timeline")
        self.actionDeselect_All_Reverse_Tags = QtWidgets.QAction(MainWindow)
        self.actionDeselect_All_Reverse_Tags.setObjectName("actionDeselect_All_Reverse_Tags")
        self.actionShow_Settings = QtWidgets.QAction(MainWindow)
        self.actionShow_Settings.setCheckable(True)
        self.actionShow_Settings.setObjectName("actionShow_Settings")
        self.actionShow_View_Scene_Rect = QtWidgets.QAction(MainWindow)
        self.actionShow_View_Scene_Rect.setCheckable(True)
        self.actionShow_View_Scene_Rect.setObjectName("actionShow_View_Scene_Rect")
        self.actionInspect_Notes = QtWidgets.QAction(MainWindow)
        self.actionInspect_Notes.setObjectName("actionInspect_Notes")
        self.actionInspect_Timeline = QtWidgets.QAction(MainWindow)
        self.actionInspect_Timeline.setObjectName("actionInspect_Timeline")
        self.actionInspect_Meta = QtWidgets.QAction(MainWindow)
        self.actionInspect_Meta.setObjectName("actionInspect_Meta")
        self.actionInspect_Item = QtWidgets.QAction(MainWindow)
        self.actionInspect_Item.setObjectName("actionInspect_Item")
        self.actionExpand_Graphical_Timeline = QtWidgets.QAction(MainWindow)
        self.actionExpand_Graphical_Timeline.setCheckable(True)
        self.actionExpand_Graphical_Timeline.setObjectName("actionExpand_Graphical_Timeline")
        self.actionHide_Emotion_Colors = QtWidgets.QAction(MainWindow)
        self.actionHide_Emotion_Colors.setCheckable(True)
        self.actionHide_Emotion_Colors.setObjectName("actionHide_Emotion_Colors")
        self.actionShow_Undo_View = QtWidgets.QAction(MainWindow)
        self.actionShow_Undo_View.setCheckable(True)
        self.actionShow_Undo_View.setObjectName("actionShow_Undo_View")
        self.actionUser_Manual_Latest_Version = QtWidgets.QAction(MainWindow)
        self.actionUser_Manual_Latest_Version.setObjectName("actionUser_Manual_Latest_Version")
        self.actionResearcher_Monthly_License = QtWidgets.QAction(MainWindow)
        self.actionResearcher_Monthly_License.setObjectName("actionResearcher_Monthly_License")
        self.actionResearcher_License = QtWidgets.QAction(MainWindow)
        self.actionResearcher_License.setCheckable(True)
        self.actionResearcher_License.setObjectName("actionResearcher_License")
        self.actionShow_License_Agreement = QtWidgets.QAction(MainWindow)
        self.actionShow_License_Agreement.setMenuRole(QtWidgets.QAction.ApplicationSpecificRole)
        self.actionShow_License_Agreement.setObjectName("actionShow_License_Agreement")
        self.actionAlpha_License = QtWidgets.QAction(MainWindow)
        self.actionAlpha_License.setCheckable(True)
        self.actionAlpha_License.setObjectName("actionAlpha_License")
        self.actionShow_Server_Files = QtWidgets.QAction(MainWindow)
        self.actionShow_Server_Files.setCheckable(True)
        self.actionShow_Server_Files.setObjectName("actionShow_Server_Files")
        self.actionShow_Local_Files = QtWidgets.QAction(MainWindow)
        self.actionShow_Local_Files.setCheckable(True)
        self.actionShow_Local_Files.setObjectName("actionShow_Local_Files")
        self.actionShow_Tips = QtWidgets.QAction(MainWindow)
        self.actionShow_Tips.setCheckable(True)
        self.actionShow_Tips.setObjectName("actionShow_Tips")
        self.actionShow_Timeline_Search = QtWidgets.QAction(MainWindow)
        self.actionShow_Timeline_Search.setObjectName("actionShow_Timeline_Search")
        self.actionHide_Variables_on_Diagram = QtWidgets.QAction(MainWindow)
        self.actionHide_Variables_on_Diagram.setCheckable(True)
        self.actionHide_Variables_on_Diagram.setObjectName("actionHide_Variables_on_Diagram")
        self.actionHide_Variable_Steady_States = QtWidgets.QAction(MainWindow)
        self.actionHide_Variable_Steady_States.setCheckable(True)
        self.actionHide_Variable_Steady_States.setObjectName("actionHide_Variable_Steady_States")
        self.actionShow_Items_with_Notes = QtWidgets.QAction(MainWindow)
        self.actionShow_Items_with_Notes.setCheckable(True)
        self.actionShow_Items_with_Notes.setObjectName("actionShow_Items_with_Notes")
        self.actionExport_Scene_dict = QtWidgets.QAction(MainWindow)
        self.actionExport_Scene_dict.setObjectName("actionExport_Scene_dict")
        self.actionSave_Scene_as_JSON = QtWidgets.QAction(MainWindow)
        self.actionSave_Scene_as_JSON.setObjectName("actionSave_Scene_as_JSON")
        self.actionInside = QtWidgets.QAction(MainWindow)
        self.actionInside.setCheckable(True)
        self.actionInside.setObjectName("actionInside")
        self.actionOutside = QtWidgets.QAction(MainWindow)
        self.actionOutside.setCheckable(True)
        self.actionOutside.setObjectName("actionOutside")
        self.actionShow_Aliases = QtWidgets.QAction(MainWindow)
        self.actionShow_Aliases.setCheckable(True)
        self.actionShow_Aliases.setObjectName("actionShow_Aliases")
        self.actionInstall_Update = QtWidgets.QAction(MainWindow)
        self.actionInstall_Update.setObjectName("actionInstall_Update")
        self.actionUndo = QtWidgets.QAction(MainWindow)
        self.actionUndo.setObjectName("actionUndo")
        self.actionRedo = QtWidgets.QAction(MainWindow)
        self.actionRedo.setObjectName("actionRedo")
        self.actionAdd_Anything = QtWidgets.QAction(MainWindow)
        self.actionAdd_Anything.setCheckable(True)
        self.actionAdd_Anything.setObjectName("actionAdd_Anything")
        self.actionDiscussion_Forum = QtWidgets.QAction(MainWindow)
        self.actionDiscussion_Forum.setObjectName("actionDiscussion_Forum")
        self.menuOpen_Recent.addSeparator()
        self.menuOpen_Recent.addAction(self.actionClear_Recent_Menu)
        self.menuFile.addAction(self.actionAbout)
        self.menuFile.addAction(self.actionPreferences)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionNew)
        self.menuFile.addAction(self.actionOpen)
        self.menuFile.addAction(self.menuOpen_Recent.menuAction())
        self.menuFile.addAction(self.actionImport_Diagram)
        self.menuFile.addAction(self.actionDocuments_Folder)
        self.menuFile.addAction(self.actionClose)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionRefresh_Server)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionSave)
        self.menuFile.addAction(self.actionSave_As)
        self.menuFile.addAction(self.actionSave_Selection_As)
        self.menuFile.addAction(self.actionPrint)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionQuit)
        self.menuFile.addAction(self.actionShow_Account)
        self.menuFile.addAction(self.actionShow_Welcome)
        self.menuFile.addAction(self.actionShow_License_Agreement)
        self.menuInsert.addAction(self.actionAdd_Anything)
        self.menuInsert.addSeparator()
        self.menuInsert.addAction(self.actionAdd_Event)
        self.menuInsert.addAction(self.actionAdd_Relationship)
        self.menuInsert.addSeparator()
        self.menuInsert.addAction(self.actionMale)
        self.menuInsert.addAction(self.actionFemale)
        self.menuInsert.addAction(self.actionMarriage)
        self.menuInsert.addAction(self.actionChild_Of)
        self.menuInsert.addAction(self.actionParents_to_Selection)
        self.menuInsert.addSeparator()
        self.menuInsert.addAction(self.actionDistance)
        self.menuInsert.addAction(self.actionConflict)
        self.menuInsert.addAction(self.actionReciprocity)
        self.menuInsert.addAction(self.actionProjection)
        self.menuInsert.addSeparator()
        self.menuInsert.addAction(self.actionPrimary_Cutoff)
        self.menuInsert.addAction(self.actionFusion)
        self.menuInsert.addAction(self.actionInside)
        self.menuInsert.addAction(self.actionOutside)
        self.menuInsert.addSeparator()
        self.menuInsert.addAction(self.actionToward)
        self.menuInsert.addAction(self.actionAway)
        self.menuInsert.addAction(self.actionDefined_Self)
        self.menuInsert.addSeparator()
        self.menuInsert.addAction(self.actionCallout)
        self.menuInsert.addAction(self.actionPencilStroke)
        self.menuTransform.addAction(self.actionNudge_Left)
        self.menuTransform.addAction(self.actionNudge_Right)
        self.menuTransform.addAction(self.actionNudge_Up)
        self.menuTransform.addAction(self.actionNudge_Down)
        self.menuTransform.addAction(self.actionHard_Nudge_Left)
        self.menuTransform.addAction(self.actionHard_Nudge_Right)
        self.menuTransform.addAction(self.actionHard_Nudge_Up)
        self.menuTransform.addAction(self.actionHard_Nudge_Down)
        self.menuEdit.addAction(self.actionUndo)
        self.menuEdit.addAction(self.actionRedo)
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.actionSelect_All)
        self.menuEdit.addAction(self.actionDeselect)
        self.menuEdit.addAction(self.actionDelete)
        self.menuEdit.addAction(self.actionClear_All_Events)
        self.menuEdit.addAction(self.menuTransform.menuAction())
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.actionInspect)
        self.menuEdit.addAction(self.actionInspect_Item)
        self.menuEdit.addAction(self.actionInspect_Notes)
        self.menuEdit.addAction(self.actionInspect_Timeline)
        self.menuEdit.addAction(self.actionInspect_Meta)
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.actionCut)
        self.menuEdit.addAction(self.actionCopy)
        self.menuEdit.addAction(self.actionPaste)
        self.menuEdit.addSeparator()
        self.menuTags.addSeparator()
        self.menuTags.addAction(self.actionDeselect_All_Tags)
        self.menuLayers.addAction(self.actionDeactivate_All_Layers)
        self.menuView.addAction(self.actionView_Diagram)
        self.menuView.addAction(self.actionReset_All)
        self.menuView.addSeparator()
        self.menuView.addAction(self.actionEditor_Mode)
        self.menuView.addSeparator()
        self.menuView.addAction(self.actionNext_Event)
        self.menuView.addAction(self.actionPrevious_Event)
        self.menuView.addAction(self.actionJump_to_Now)
        self.menuView.addSeparator()
        self.menuView.addAction(self.actionNext_Layer)
        self.menuView.addAction(self.actionPrevious_Layer)
        self.menuView.addAction(self.menuLayers.menuAction())
        self.menuView.addAction(self.menuTags.menuAction())
        self.menuView.addSeparator()
        self.menuView.addAction(self.actionShow_Diagram)
        self.menuView.addAction(self.actionShow_Timeline)
        self.menuView.addAction(self.actionShow_Search)
        self.menuView.addAction(self.actionShow_Settings)
        self.menuView.addSeparator()
        self.menuView.addAction(self.actionShow_Items_with_Notes)
        self.menuView.addAction(self.actionShow_Aliases)
        self.menuView.addAction(self.actionUndo_History)
        self.menuView.addAction(self.actionShow_Graphical_Timeline)
        self.menuView.addAction(self.actionExpand_Graphical_Timeline)
        self.menuView.addAction(self.actionShow_Current_Date)
        self.menuView.addAction(self.actionShow_Legend)
        self.menuView.addSeparator()
        self.menuView.addAction(self.actionHide_Names)
        self.menuView.addAction(self.actionHide_Emotional_Process)
        self.menuView.addAction(self.actionHide_Emotion_Colors)
        self.menuView.addAction(self.actionHide_Layers)
        self.menuView.addAction(self.actionHide_ToolBars)
        self.menuView.addAction(self.actionHide_Variables_on_Diagram)
        self.menuView.addAction(self.actionHide_Variable_Steady_States)
        self.menuView.addSeparator()
        self.menuView.addAction(self.actionZoom_In)
        self.menuView.addAction(self.actionZoom_Out)
        self.menuView.addAction(self.actionZoom_Fit)
        self.menuView.addSeparator()
        self.menuHelp.addAction(self.actionUser_Manual)
        self.menuHelp.addAction(self.actionUser_Manual_Latest_Version)
        self.menuHelp.addAction(self.actionDiscussion_Forum)
        self.menuHelp.addAction(self.actionSupport)
        self.menuHelp.addSeparator()
        self.menuHelp.addAction(self.actionShow_Tips)
        self.menuHelp.addSeparator()
        self.menuHelp.addAction(self.actionCheck_for_Updates)
        self.menuHelp.addAction(self.actionInstall_Update)
        self.menuDebug.addAction(self.actionShow_Scene_Center)
        self.menuDebug.addAction(self.actionShow_View_Scene_Rect)
        self.menuDebug.addAction(self.actionShow_Print_Rect)
        self.menuDebug.addAction(self.actionShow_Cursor_Position)
        self.menuDebug.addAction(self.actionPathItem_Shapes)
        self.menuDebug.addAction(self.actionShow_Undo_View)
        self.menuDebug.addAction(self.actionCrash)
        self.menuDebug.addAction(self.actionRaise_Python_Exception)
        self.menuDebug.addAction(self.actionExport_Scene_dict)
        self.menuDebug.addSeparator()
        self.menuDebug.addAction(self.actionShow_Local_Files)
        self.menuDebug.addAction(self.actionShow_Server_Files)
        self.menuDebug.addAction(self.actionPush_Queued_Uploads)
        self.menuDebug.addAction(self.actionClear_Queued_Uploads)
        self.menuDebug.addAction(self.actionReload_Server)
        self.menuDebug.addAction(self.actionClear_Preferences)
        self.menuDebug.addAction(self.actionSave_Scene_as_JSON)
        self.menuDebug.addSeparator()
        self.menuDebug.addAction(self.actionStart_Profile)
        self.menuDebug.addAction(self.actionStop_Profile)
        self.menuBar.addAction(self.menuFile.menuAction())
        self.menuBar.addAction(self.menuEdit.menuAction())
        self.menuBar.addAction(self.menuView.menuAction())
        self.menuBar.addAction(self.menuInsert.menuAction())
        self.menuBar.addAction(self.menuHelp.menuAction())
        self.menuBar.addAction(self.menuDebug.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuOpen_Recent.setTitle(_translate("MainWindow", "Open Recent..."))
        self.menuInsert.setTitle(_translate("MainWindow", "Insert"))
        self.menuEdit.setTitle(_translate("MainWindow", "Edit"))
        self.menuTransform.setTitle(_translate("MainWindow", "Transform"))
        self.menuView.setTitle(_translate("MainWindow", "View"))
        self.menuTags.setTitle(_translate("MainWindow", "Show Event Tags"))
        self.menuLayers.setTitle(_translate("MainWindow", "Show Diagram Views"))
        self.menuHelp.setTitle(_translate("MainWindow", "Help"))
        self.menuDebug.setTitle(_translate("MainWindow", "Debug"))
        self.actionOpen.setText(_translate("MainWindow", "Open"))
        self.actionOpen.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.actionSave.setText(_translate("MainWindow", "Save"))
        self.actionSave.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.actionSave_As.setText(_translate("MainWindow", "Save a Copy..."))
        self.actionSave_As.setShortcut(_translate("MainWindow", "Ctrl+Shift+S"))
        self.actionQuit.setText(_translate("MainWindow", "Quit"))
        self.actionQuit.setShortcut(_translate("MainWindow", "Ctrl+Q"))
        self.actionMale.setText(_translate("MainWindow", "Male"))
        self.actionMale.setShortcut(_translate("MainWindow", "Ctrl+M"))
        self.actionFemale.setText(_translate("MainWindow", "Female"))
        self.actionFemale.setShortcut(_translate("MainWindow", "Ctrl+F"))
        self.actionMarriage.setText(_translate("MainWindow", "Pair-Bond"))
        self.actionMarriage.setShortcut(_translate("MainWindow", "Ctrl+Shift+P"))
        self.actionDelete.setText(_translate("MainWindow", "Delete"))
        self.actionDelete.setShortcut(_translate("MainWindow", "Ctrl+Backspace"))
        self.actionZoom_Out.setText(_translate("MainWindow", "Zoom Out"))
        self.actionZoom_Out.setShortcut(_translate("MainWindow", "Ctrl+-"))
        self.actionZoom_In.setText(_translate("MainWindow", "Zoom In"))
        self.actionZoom_In.setShortcut(_translate("MainWindow", "Ctrl+="))
        self.actionZoom_Fit.setText(_translate("MainWindow", "Zoom Fit"))
        self.actionZoom_Fit.setShortcut(_translate("MainWindow", "Ctrl+Shift+1"))
        self.actionNudge_Left.setText(_translate("MainWindow", "Nudge Left"))
        self.actionNudge_Left.setShortcut(_translate("MainWindow", "Left"))
        self.actionNudge_Right.setText(_translate("MainWindow", "Nudge Right"))
        self.actionNudge_Right.setShortcut(_translate("MainWindow", "Right"))
        self.actionNudge_Up.setText(_translate("MainWindow", "Nudge Up"))
        self.actionNudge_Up.setShortcut(_translate("MainWindow", "Up"))
        self.actionNudge_Down.setText(_translate("MainWindow", "Nudge Down"))
        self.actionNudge_Down.setShortcut(_translate("MainWindow", "Down"))
        self.actionHard_Nudge_Left.setText(_translate("MainWindow", "Hard Nudge Left"))
        self.actionHard_Nudge_Left.setShortcut(_translate("MainWindow", "Shift+Left"))
        self.actionHard_Nudge_Right.setText(_translate("MainWindow", "Hard Nudge Right"))
        self.actionHard_Nudge_Right.setShortcut(_translate("MainWindow", "Shift+Right"))
        self.actionHard_Nudge_Up.setText(_translate("MainWindow", "Hard Nudge Up"))
        self.actionHard_Nudge_Up.setShortcut(_translate("MainWindow", "Shift+Up"))
        self.actionHard_Nudge_Down.setText(_translate("MainWindow", "Hard Nudge Down"))
        self.actionHard_Nudge_Down.setShortcut(_translate("MainWindow", "Shift+Down"))
        self.actionNew.setText(_translate("MainWindow", "New"))
        self.actionNew.setShortcut(_translate("MainWindow", "Ctrl+N"))
        self.actionAbout.setText(_translate("MainWindow", "About"))
        self.actionPrint.setText(_translate("MainWindow", "Print"))
        self.actionPrint.setShortcut(_translate("MainWindow", "Ctrl+P"))
        self.actionView_Diagram.setText(_translate("MainWindow", "Diagram"))
        self.actionView_Diagram.setShortcut(_translate("MainWindow", "Ctrl+2"))
        self.actionEditor_Mode.setText(_translate("MainWindow", "Editor Mode"))
        self.actionEditor_Mode.setToolTip(_translate("MainWindow", "Add additional controls and views to the app for more complex data editing"))
        self.actionDocuments_Folder.setText(_translate("MainWindow", "Open Documents Folder"))
        self.actionInspect.setText(_translate("MainWindow", "Inspect"))
        self.actionInspect.setShortcut(_translate("MainWindow", "Ctrl+I"))
        self.actionSelect_All.setText(_translate("MainWindow", "Select All"))
        self.actionSelect_All.setShortcut(_translate("MainWindow", "Ctrl+A"))
        self.actionDeselect.setText(_translate("MainWindow", "Deselect"))
        self.actionDeselect.setShortcut(_translate("MainWindow", "Ctrl+D"))
        self.actionShow_Timeline.setText(_translate("MainWindow", "Show Timeline"))
        self.actionShow_Timeline.setShortcut(_translate("MainWindow", "Ctrl+2"))
        self.actionCopy.setText(_translate("MainWindow", "Copy"))
        self.actionCopy.setShortcut(_translate("MainWindow", "Ctrl+C"))
        self.actionPaste.setText(_translate("MainWindow", "Paste"))
        self.actionPaste.setShortcut(_translate("MainWindow", "Ctrl+V"))
        self.actionCut.setText(_translate("MainWindow", "Cut"))
        self.actionCut.setShortcut(_translate("MainWindow", "Ctrl+X"))
        self.actionClear_All_Events.setText(_translate("MainWindow", "Clear All Events"))
        self.actionClear_All_Events.setShortcut(_translate("MainWindow", "Ctrl+Shift+K"))
        self.actionUndo_History.setText(_translate("MainWindow", "Show Undo History"))
        self.actionUndo_History.setShortcut(_translate("MainWindow", "Ctrl+4"))
        self.actionHide_Emotional_Process.setText(_translate("MainWindow", "Hide Relationships"))
        self.actionHide_Emotional_Process.setShortcut(_translate("MainWindow", "Ctrl+Alt+E"))
        self.actionPreferences.setText(_translate("MainWindow", "Preferences"))
        self.actionHide_ToolBars.setText(_translate("MainWindow", "Hide Toolbars"))
        self.actionHide_ToolBars.setShortcut(_translate("MainWindow", "Ctrl+Alt+T"))
        self.actionImport_Diagram.setText(_translate("MainWindow", "Import Diagram"))
        self.actionImport_Diagram.setShortcut(_translate("MainWindow", "Ctrl+Shift+O"))
        self.actionSave_Selection_As.setText(_translate("MainWindow", "Save Selection As..."))
        self.actionClose.setText(_translate("MainWindow", "Close"))
        self.actionClose.setShortcut(_translate("MainWindow", "Ctrl+W"))
        self.actionCrash.setText(_translate("MainWindow", "Crash Application"))
        self.actionSupport.setText(_translate("MainWindow", "Get Support"))
        self.actionRaise_Python_Exception.setText(_translate("MainWindow", "Raise Python Exception"))
        self.actionCheck_for_Updates.setText(_translate("MainWindow", "Check for Updates..."))
        self.actionHide_Names.setText(_translate("MainWindow", "Hide Names"))
        self.actionHide_Names.setShortcut(_translate("MainWindow", "Ctrl+Alt+N"))
        self.actionShow_Scene_Center.setText(_translate("MainWindow", "Show Scene Center"))
        self.actionShow_Print_Rect.setText(_translate("MainWindow", "Show Print Rect"))
        self.actionChild_Of.setText(_translate("MainWindow", "Child-Of"))
        self.actionChild_Of.setShortcut(_translate("MainWindow", "Ctrl+Shift+C"))
        self.actionConflict.setText(_translate("MainWindow", "Conflict"))
        self.actionProjection.setText(_translate("MainWindow", "Projection"))
        self.actionFusion.setText(_translate("MainWindow", "Fusion"))
        self.actionPrimary_Cutoff.setText(_translate("MainWindow", "Cutoff"))
        self.actionDistance.setText(_translate("MainWindow", "Distance"))
        self.actionStart_Macro.setText(_translate("MainWindow", "Start Recording"))
        self.actionStop_Macro.setText(_translate("MainWindow", "Stop Recording"))
        self.actionPlay_Macro.setText(_translate("MainWindow", "Play Macro"))
        self.actionPlay_Macro.setShortcut(_translate("MainWindow", "Ctrl+Alt+Shift+M"))
        self.actionShow_Diagram.setText(_translate("MainWindow", "Show Diagram"))
        self.actionShow_Diagram.setShortcut(_translate("MainWindow", "Ctrl+1"))
        self.actionJump_to_Now.setText(_translate("MainWindow", "Jump to Now"))
        self.actionJump_to_Now.setShortcut(_translate("MainWindow", "Ctrl+0"))
        self.actionNext_Event.setText(_translate("MainWindow", "Next Event"))
        self.actionNext_Event.setShortcut(_translate("MainWindow", "Ctrl+Shift+]"))
        self.actionPrevious_Event.setText(_translate("MainWindow", "Previous Event"))
        self.actionPrevious_Event.setShortcut(_translate("MainWindow", "Ctrl+Shift+["))
        self.actionAdd_Event.setText(_translate("MainWindow", "Event"))
        self.actionAdd_Event.setShortcut(_translate("MainWindow", "Ctrl+E"))
        self.actionAdd_Relationship.setText(_translate("MainWindow", "Relationship"))
        self.actionAdd_Relationship.setShortcut(_translate("MainWindow", "Ctrl+R"))
        self.actionShow_Relationships.setText(_translate("MainWindow", "Show Relationships"))
        self.actionShow_Relationships.setShortcut(_translate("MainWindow", "Ctrl+3"))
        self.actionShow_Cursor_Position.setText(_translate("MainWindow", "Show Cursor Position"))
        self.actionShow_Current_Date.setText(_translate("MainWindow", "Show Current Date"))
        self.actionStart_Profile.setText(_translate("MainWindow", "Start Profile"))
        self.actionStart_Profile.setShortcut(_translate("MainWindow", "Ctrl+Alt+P"))
        self.actionStop_Profile.setText(_translate("MainWindow", "Stop Profile"))
        self.actionStop_Profile.setShortcut(_translate("MainWindow", "Ctrl+Alt+P"))
        self.actionReload_Server.setText(_translate("MainWindow", "Reload Server"))
        self.actionUse_Dev_Server.setText(_translate("MainWindow", "Use Dev Server"))
        self.actionPush_Queued_Uploads.setText(_translate("MainWindow", "Push Queued Uploads"))
        self.actionClear_Queued_Uploads.setText(_translate("MainWindow", "Clear Queued Uploads"))
        self.actionRefresh_Server.setText(_translate("MainWindow", "Refresh Server"))
        self.actionRefresh_Server.setShortcut(_translate("MainWindow", "Ctrl+Shift+R"))
        self.actionAdmin_Mode.setText(_translate("MainWindow", "Admin Mode"))
        self.actionAdmin_Mode.setShortcut(_translate("MainWindow", "Ctrl+Alt+Shift+A"))
        self.actionPathItem_Shapes.setText(_translate("MainWindow", "Show PathItem Shapes"))
        self.actionShow_Search.setText(_translate("MainWindow", "Show Search"))
        self.actionShow_Search.setShortcut(_translate("MainWindow", "Ctrl+3"))
        self.actionCallout.setText(_translate("MainWindow", "Text Callout"))
        self.actionCallout.setShortcut(_translate("MainWindow", "Ctrl+T"))
        self.actionNext_Layer.setText(_translate("MainWindow", "Next View"))
        self.actionNext_Layer.setShortcut(_translate("MainWindow", "Ctrl+Right"))
        self.actionPrevious_Layer.setText(_translate("MainWindow", "Previous View"))
        self.actionPrevious_Layer.setShortcut(_translate("MainWindow", "Ctrl+Left"))
        self.actionHide_Layers.setText(_translate("MainWindow", "Hide Diagram Views"))
        self.actionHide_Layers.setShortcut(_translate("MainWindow", "Ctrl+Alt+L"))
        self.actionPencilStroke.setText(_translate("MainWindow", "Line Drawing"))
        self.actionPencilStroke.setShortcut(_translate("MainWindow", "Ctrl+L"))
        self.actionDefined_Self.setText(_translate("MainWindow", "Defined Self"))
        self.actionAway.setText(_translate("MainWindow", "Away"))
        self.actionToward.setText(_translate("MainWindow", "Toward"))
        self.actionShow_Legend.setText(_translate("MainWindow", "Show Legend"))
        self.actionParents_to_Selection.setText(_translate("MainWindow", "Parents to Selection"))
        self.actionParents_to_Selection.setShortcut(_translate("MainWindow", "Ctrl+Shift+F"))
        self.actionFree_License.setText(_translate("MainWindow", "Free License"))
        self.actionCommercial_Annual_License.setText(_translate("MainWindow", "Commercial Annual License"))
        self.actionProfessional_License.setText(_translate("MainWindow", "Professional License"))
        self.actionShow_Account.setText(_translate("MainWindow", "Show My Account..."))
        self.actionShow_Account.setShortcut(_translate("MainWindow", "Ctrl+Shift+A"))
        self.actionShow_Welcome.setText(_translate("MainWindow", "Show Welcome..."))
        self.actionNo_License.setText(_translate("MainWindow", "No License"))
        self.actionClear_Recent_Menu.setText(_translate("MainWindow", "Clear Menu"))
        self.actionClear_Preferences.setText(_translate("MainWindow", "Clear Preferences"))
        self.actionBeta_License.setText(_translate("MainWindow", "Beta License"))
        self.actionUser_Manual.setText(_translate("MainWindow", "User Manual"))
        self.actionShow_Person_Properties.setText(_translate("MainWindow", "Show Person Properties"))
        self.actionShow_Person_Properties.setShortcut(_translate("MainWindow", "Ctrl+2"))
        self.actionDeselect_All_Tags.setText(_translate("MainWindow", "Deselect All Event Tags"))
        self.actionDeselect_All_Layers.setText(_translate("MainWindow", "Deselect All Diagram Views"))
        self.actionDeactivate_All_Layers.setText(_translate("MainWindow", "Deactivate All Diagram Views"))
        self.actionReciprocity.setText(_translate("MainWindow", "Reciprocity"))
        self.actionReset_All.setText(_translate("MainWindow", "Reset Diagram"))
        self.actionReset_All.setShortcut(_translate("MainWindow", "Ctrl+Shift+0"))
        self.actionShow_Graphical_Timeline.setText(_translate("MainWindow", "Show Graphical Timeline"))
        self.actionShow_Graphical_Timeline.setShortcut(_translate("MainWindow", "Ctrl+5"))
        self.actionDeselect_All_Reverse_Tags.setText(_translate("MainWindow", "Deselect All"))
        self.actionShow_Settings.setText(_translate("MainWindow", "Show Settings"))
        self.actionShow_Settings.setShortcut(_translate("MainWindow", "Ctrl+4"))
        self.actionShow_View_Scene_Rect.setText(_translate("MainWindow", "Show View Scene Rect"))
        self.actionInspect_Notes.setText(_translate("MainWindow", "Inspect Notes"))
        self.actionInspect_Notes.setShortcut(_translate("MainWindow", "Ctrl+Shift+N"))
        self.actionInspect_Timeline.setText(_translate("MainWindow", "Inspect Timeline"))
        self.actionInspect_Timeline.setShortcut(_translate("MainWindow", "Ctrl+Shift+T"))
        self.actionInspect_Meta.setText(_translate("MainWindow", "Inspect Meta"))
        self.actionInspect_Meta.setShortcut(_translate("MainWindow", "Ctrl+Shift+M"))
        self.actionInspect_Item.setText(_translate("MainWindow", "Inspect Item"))
        self.actionInspect_Item.setShortcut(_translate("MainWindow", "Ctrl+Shift+I"))
        self.actionExpand_Graphical_Timeline.setText(_translate("MainWindow", "Expand Graphical Timeline"))
        self.actionExpand_Graphical_Timeline.setShortcut(_translate("MainWindow", "Ctrl+6"))
        self.actionHide_Emotion_Colors.setText(_translate("MainWindow", "Hide Relationship Colors"))
        self.actionHide_Emotion_Colors.setShortcut(_translate("MainWindow", "Ctrl+Alt+C"))
        self.actionShow_Undo_View.setText(_translate("MainWindow", "Show Undo View"))
        self.actionUser_Manual_Latest_Version.setText(_translate("MainWindow", "User Manual (Latest Version)"))
        self.actionResearcher_Monthly_License.setText(_translate("MainWindow", "Researcher Monthly License"))
        self.actionResearcher_License.setText(_translate("MainWindow", "Researcher License"))
        self.actionShow_License_Agreement.setText(_translate("MainWindow", "Show License Agreement..."))
        self.actionAlpha_License.setText(_translate("MainWindow", "Alpha License"))
        self.actionShow_Server_Files.setText(_translate("MainWindow", "Show Server Files"))
        self.actionShow_Local_Files.setText(_translate("MainWindow", "Show Local Files"))
        self.actionShow_Tips.setText(_translate("MainWindow", "Show Tips"))
        self.actionShow_Tips.setShortcut(_translate("MainWindow", "Ctrl+Shift+H"))
        self.actionShow_Timeline_Search.setText(_translate("MainWindow", "Show Timeline Search"))
        self.actionShow_Timeline_Search.setShortcut(_translate("MainWindow", "Ctrl+Shift+2"))
        self.actionHide_Variables_on_Diagram.setText(_translate("MainWindow", "Hide Variables on Diagram"))
        self.actionHide_Variable_Steady_States.setText(_translate("MainWindow", "Hide Variable Steady States"))
        self.actionShow_Items_with_Notes.setText(_translate("MainWindow", "Show Items with Notes"))
        self.actionShow_Items_with_Notes.setShortcut(_translate("MainWindow", "Meta+Ctrl+N"))
        self.actionExport_Scene_dict.setText(_translate("MainWindow", "Export Scene dict"))
        self.actionSave_Scene_as_JSON.setText(_translate("MainWindow", "Save Scene as JSON"))
        self.actionInside.setText(_translate("MainWindow", "Inside"))
        self.actionOutside.setText(_translate("MainWindow", "Outside"))
        self.actionShow_Aliases.setText(_translate("MainWindow", "Show Aliases"))
        self.actionShow_Aliases.setShortcut(_translate("MainWindow", "Ctrl+Alt+A"))
        self.actionInstall_Update.setText(_translate("MainWindow", "Install Update..."))
        self.actionUndo.setText(_translate("MainWindow", "Undo"))
        self.actionUndo.setShortcut(_translate("MainWindow", "Ctrl+Z"))
        self.actionRedo.setText(_translate("MainWindow", "Redo"))
        self.actionRedo.setShortcut(_translate("MainWindow", "Ctrl+Shift+Z"))
        self.actionAdd_Anything.setText(_translate("MainWindow", "Add Data Point"))
        self.actionAdd_Anything.setShortcut(_translate("MainWindow", "Ctrl+Shift+A"))
        self.actionDiscussion_Forum.setText(_translate("MainWindow", "Discussion Forum"))
