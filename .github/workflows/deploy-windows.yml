name: Build Windows

on:
  push:
    branches:
      - noop

jobs:
  build:
    runs-on: windows-2019

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python 3.10.4
      uses: actions/setup-python@v2
      with:
        python-version: 3.10.4
        cache: 'pipenv'

    # - name: Install Visual Studio Build Tools
    #   run: |
    #     choco install visualstudio2019buildtools --package-parameters "--add Microsoft.VisualStudio.Workload.VCTools --includeRecommended --includeOptional" -y

    # - name: Install Qt5
    #   run: |
    #     choco install qt5-default -y
    #     $env:PATH="C:\Qt\5.15.2\mingw81_64\bin;$env:PATH"

    - name: Install Chocolatey
      run: |
        Set-ExecutionPolicy Bypass -Scope Process -Force; `
        [System.Net.ServicePointManager]::SecurityProtocol = `
        [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; `
        iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))

    - name: Install 7zip
      run: choco install 7zip -y

    # - name: Download Qt Online Installer
    #   run: choco install python --version=3.10.4 -y

    - name: Install pipenv
      run: python -m pip install pipenv

    - name: Install dependencies
      run: pipenv install --dev

    - name: pipenv install aqtinstall
      run: pipenv install aqtinstall

    - name: Install Qt
      run: |
        pipenv run aqt install-qt windows desktop 5.15.2 win64_msvc2019_64 --outputdir C:\Qt --archives qtbase qtdeclarative qtgraphicaleffects qtimageformats qtquickcontrols qtquickcontrols2 qttools qtwinextras
        echo "C:\Qt\5.15.2\msvc2019_64\bin" >> $env:GITHUB_PATH
        # echo "C:\Qt\5.15.2\msvc2019_64\include" >> $env:GITHUB_ENV
    
    - name: Setup _pkdiagram caching
      id: cache-_pkdiagram
      uses: actions/cache@v2
      with:
        path: |
          pkdiagram/_pkdiagram/build
        key: _pkdiagram-${{ runner.os }}-${{ hashFiles('./pkdiagram/_pkdiagram/sip/*.sip', './pkdiagram/_pkdiagram/*.h', './pkdiagram/_pkdiagram/*.cpp') }}
    
    - name: sip-build for _pkdiagram
      if: steps.cache-_pkdiagram.outputs.cache-hit != 'true'
      run: |
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
        qmake --version
        cd pkdiagram/_pkdiagram && pipenv run sip-build
      shell: cmd

    - name: Setup sysroot caching
      id: cache-sysroot
      uses: actions/cache@v2
      with:
        path: ./sysroot/sysroot-win-64
        key: sysroot-win-64
        # key: sysroot-${{ runner.os }}-${{ hashFiles('./sysroot/sysroot.toml') }}
    
    - name: Build sysroot
      if: steps.cache-sysroot.outputs.cache-hit != 'true'
      run: |
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
        which qmake
        pipenv run pyqtdeploy-sysroot --verbose sysroot/sysroot.toml
      shell: cmd

    # - name: Build app
    #   run: |
    #     call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
    #     pipenv run bin\\build.bat
    #   shell: cmd
  
  