# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Build macOS

on:
  push:
    branches:
      - 2.0.0
      # pyqtdeploy-build: SIP: 'version' has not been specified.

# defaults:
#   run:
#     working-directory: /Users/patrick/dev/familydiagram

jobs:
  build-osx:
    # x86 w/ python-3.12.5
    # https://github.com/actions/runner-images/blob/main/images/macos/macos-14-Readme.md
    runs-on: macos-12

    env:
      # variables
      FAMILYDIAGRAM_BUILD: 1
      FD_BUILD_DIR: ${{ github.workspace }}/build/osx/Release
      FD_BUILD_KEYCHAIN_NAME: ${{ github.workspace }}/build/osx/Release/build.keychain-db
      FD_BUILD_PROVISIONING_PROFILE_FPATH: ${{ github.workspace }}/build/osx/Release/FD.provisionprofile
      FD_BUILD_CERTIFICATE_FPATH: ${{ github.workspace }}/build/osx/Release/FD_certificate.crt
      FD_BUILD_PRIVATE_KEY_FPATH: ${{ github.workspace }}/build/osx/Release/FD_certificate.pem
      FD_BUILD_AC_AUTH_KEY_FPATH: ${{ github.workspace }}/build/osx/Release/AuthKey_${{ secrets.FD_BUILD_AC_AUTH_KEY_ID }}.p8
      FD_APP_PATH: ${{ github.workspace }}/build/osx/Release/Family\ Diagram.app
      # secrets
      FD_BUILD_APPLE_ID: "${{ secrets.FD_BUILD_APPLE_ID }}"
      FD_BUILD_APPLE_ID_PASSWORD: "${{ secrets.FD_BUILD_APPLE_ID_PASSWORD }}"
      FD_BUILD_PROVISIONING_PROFILE_BASE64: "${{ secrets.FD_BUILD_PROVISIONING_PROFILE_BASE64 }}"
      FD_BUILD_CERTIFICATE_BASE64: "${{ secrets.FD_BUILD_CERTIFICATE_BASE64 }}"
      FD_BUILD_PRIVATE_KEY_BASE64: "${{ secrets.FD_BUILD_PRIVATE_KEY_BASE64 }}"
      FD_BUILD_CERTIFICATE_PASSWORD: "${{ secrets.FD_BUILD_CERTIFICATE_PASSWORD }}"
      FD_BUILD_AC_AUTH_KEY_ID: "${{ secrets.FD_BUILD_AC_AUTH_KEY_ID }}"
      FD_BUILD_AC_AUTH_KEY_BASE64: "${{ secrets.FD_BUILD_AC_AUTH_KEY_BASE64 }}"
      FD_BUILD_AC_AUTH_KEY_ISSUER: "${{ secrets.FD_BUILD_AC_AUTH_KEY_ISSUER }}"
      FD_BUILD_PEPPER: "${{ secrets.FD_BUILD_PEPPER }}"
      FD_BUILD_BUGSNAG_API_KEY: "${{ secrets.FD_BUILD_BUGSNAG_API_KEY }}"
      
    steps:

    ## Environment

    - uses: actions/checkout@v2
      with:
        submodules: true

    # # Will provide an SSH command in the logs that you can use to access the runner.
    # - name: Setup tmate session
    #   uses: mxschmitt/action-tmate@v3        

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.10.4
        # architecture: 'x64'
        cache: 'pipenv'
    - run: |
        pip install pipenv
        pipenv install --verbose

    # It is faster to install homebrew than to restore from cache
    - name: brew install qt@5 create-dmg
      run: |
        brew install qt@5 create-dmg

    ## App
    
    - name: Setup _pkdiagram caching
      id: cache-_pkdiagram
      uses: actions/cache@v2
      with:
        path: |
          pkdiagram/_pkdiagram/build
        key: _pkdiagram-${{ runner.os }}-${{ hashFiles('./pkdiagram/_pkdiagram/sip/*.sip', './pkdiagram/_pkdiagram/*.h', './pkdiagram/_pkdiagram/*.cpp') }}
    
    - name: sip-build for _pkdiagram
      if: steps.cache-_pkdiagram.outputs.cache-hit != 'true'
      run: |
        export PATH="/usr/local/opt/qt@5/bin:${PATH}"
        which qmake
        cd pkdiagram/_pkdiagram
        pipenv run sip-build --no-compile
        moc -o build/_pkdiagram/moc_unsafearea.cpp unsafearea.h
        moc -o build/_pkdiagram/moc__pkdiagram.cpp _pkdiagram.h

    - name: Download zlib source
      run: |
        wget -L "https://www.zlib.net/fossils/zlib-1.2.11.tar.gz" -P ./sysroot/

    - name: Setup sysroot caching
      id: cache-sysroot
      uses: actions/cache@v2
      with:
        path: ./sysroot/sysroot-macos-64
        key: sysroot-macOS-2
        # key: sysroot-${{ runner.os }}-${{ hashFiles('./sysroot/sysroot.toml') }}
    
    - name: Build sysroot
      if: steps.cache-sysroot.outputs.cache-hit != 'true'
      run: |
        export PATH="/usr/local/opt/qt@5/bin:${PATH}"
        which qmake
        pipenv run pyqtdeploy-sysroot --target macos-64 --verbose sysroot/sysroot.toml
        
    - name: Write build config
      run: |
        pipenv run python bin/update_build_info.py
            
    - name: Generate qmake project
      run: |
        export PATH="`pwd`/sysroot/sysroot-macos-64/Qt/bin:${PATH}"
        pipenv run pyqtdeploy-build --verbose  --resources 12 --target macos-64 --build-dir build/osx familydiagram.pdt
        rsync -avzq build/common-config/* build/osx
        rsync -avzq build/osx-config/* build/osx

    - name: qmake
      run: |
        export PATH="`pwd`/sysroot/sysroot-macos-64/Qt/bin:${PATH}"
        cd build/osx
        cat Family\ Diagram.pro
        qmake -spec macx-xcode CONFIG+=no_autoqmake CONFIG+=debug CONFIG-=release CONFIG+=beta

    - name: Setup provisioning profile
      run: |
        pipenv run ./bin/setup_provisioning_profile.sh
        echo "PKS Set up provisioning profile in keychain ${FD_BUILD_KEYCHAIN_NAME}"

    - name: Update xcode project to new build system
      run: |
        python3 bin/fixup_xcodeproj_workspace.py

    - name: Qt Preprocess
      run: |
        xcodebuild \
          -project build/osx/Family\ Diagram.xcodeproj \
          -target "Qt Preprocess" \
          -configuration Release

    - name: Build App
      run: |
        xcodebuild -project build/osx/Family\ Diagram.xcodeproj -scheme "Family Diagram" -configuration Release -showBuildSettings
        pipenv run xcodebuild \
          -project build/osx/Family\ Diagram.xcodeproj \
          -scheme "Family Diagram" \
          -configuration Release \
          -archivePath ${FD_BUILD_DIR}/Family\ Diagram.xcarchive \
          -xcconfig build/osx/Family-Diagram-Release.xcconfig \
          OTHER_CODE_SIGN_FLAGS="--options=runtime" \
          archive

    - name: Export archive
      run: |
        xcodebuild \
          -verbose \
          -exportArchive \
          -archivePath ${FD_BUILD_DIR}/Family\ Diagram.xcarchive \
          -exportOptionsPlist build/osx/ExportOptions.plist \
          -exportPath $FD_BUILD_DIR/Export

    - name: Prep App Bundle
      run: |
        rm build/osx/Release/Family\ Diagram.app
        cp -R $FD_BUILD_DIR/Export/Family\ Diagram.app build/osx/Release
        ditto -c -k --keepParent \
            "$FD_BUILD_DIR/Family Diagram.app" \
            "$FD_BUILD_DIR/Family Diagram.zip"

    - name: Uploading for notarization
      run: |
        ls -la ./build/osx/Release
        xcrun notarytool submit \
          --key "${FD_BUILD_AC_AUTH_KEY_FPATH}" \
          --key-id "${FD_BUILD_AC_AUTH_KEY_ID}" \
          --issuer "${FD_BUILD_AC_AUTH_KEY_ISSUER}" \
          --timeout 2h \
          --wait --progress \
          --output-format plist \
          "$FD_BUILD_DIR/Family Diagram.zip" \
          > ${FD_BUILD_DIR}/NotaryResults.plist || true
        
        REQUEST_STATUS=$(/usr/libexec/PlistBuddy -c "Print :status" build/osx/Release/NotaryResults.plist)
        if [ "$REQUEST_STATUS" != "Accepted" ]; then
            REQUEST_UUID=$(/usr/libexec/PlistBuddy -c "Print :id" ${FD_BUILD_DIR}/NotaryResults.plist)
            echo "PKS *** Notarizing failed, fetching developer log for Request ID: ${REQUEST_UUID}..."
            xcrun notarytool log $REQUEST_UUID \
                --key "${FD_BUILD_AC_AUTH_KEY_FPATH}" \
                --key-id "${FD_BUILD_AC_AUTH_KEY_ID}" \
                --issuer "${FD_BUILD_AC_AUTH_KEY_ISSUER}" 
            exit 1
        fi

    - name: Stapling app bundle
      run: |
        xcrun stapler staple "${FD_BUILD_DIR}/Family Diagram.app"

    - name: Create DMG
      run: |
        cd build/osx
        create-dmg \
          --volname "Family Diagram" \
          --volicon "PKDiagram-Filled.icns" \
          --background "DMG-Background.png" \
          --window-pos 200 200 \
          --window-size 800 600 \
          --icon-size 128 \
          --icon "Family Diagram.app" 200 350 \
          --hide-extension "Family Diagram.app" \
          --app-drop-link 600 350 \
          --no-internet-enable \
          "Release/Family Diagram.dmg" \
          "Release/"

    - name: Verify app
      run: |
        build/osx/Release/Family\ Diagram.app/Contents/MacOS/Family\ Diagram --version

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: familydiagram-macos
        path: build/osx/Release/Family Diagram.dmg
  